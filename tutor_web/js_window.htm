<html>
<head>
	<title>線上教材：WEB 程式設計</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel=stylesheet type="text/css" href="myCss.css" />
	<base target="_blank">
	<script type="text/javascript" src="myJs.js"></script>
	<script type="text/javascript" src="shCore.js"></script>
	<script type="text/javascript" src="shBrushXml.js"></script>
	<script type="text/javascript" src="shBrushCss.js"></script>
	<script type="text/javascript" src="shBrushMine.js"></script>
	<link href="shCore.css" rel="stylesheet" type="text/css" />
	<link href="shThemeDefault.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript">
		SyntaxHighlighter.all();
	</script>
	</head>

<body bgcolor="#ccccff">

<blockquote>

<script>
Gol_D_Roger(["6-2"], true); // 顯示羅傑的書的章節對應
</script>

<p>於本篇中，將介紹操控視窗與捲軸的一些方法。</p>

<p>透過 window 物件的 open 方法，可以幫你開啟一個新的視窗，並且設定該視窗的相關樣貌，例如：</p>
<ul>
	<li>toolbar: 工具列</li>
	<li>location: 網址列</li>
	<li>status: 網址列</li>
	<li>menubar: 功能表列</li>
	<li>scrollbars: 捲軸</li>
	<li>resizable: 放大縮小</li>
	<li>width: 寬度</li>
	<li>height: 高度</li>
</ul>

<p>以上的參數設定方式，除了 width 和 height 是以數字指定之外，其餘都是用 yes/no 或者 1/0 來指定是否呈現。另外，這些顯示效果根據瀏覽器的不同，可能也會有所不同，例如 Chorme 一定會顯示網址列和捲軸。以下範例會開啟一個寬度和高度各是螢幕一半的視窗：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;script&gt;function myOpen(){	window.open(		&quot;../index.htm&quot;, &quot;test&quot;,		&quot;width=&quot; + screen.width / 2 + &quot;, height=&quot; + screen.height / 2	);}&lt;/script&gt;&lt;input type=&quot;button&quot; onClick=&quot;myOpen();&quot; value=&quot;按我開新視窗&quot;&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>利用「close」方法，可以關閉視窗，範例如下：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;input type=&quot;button&quot; onClick=&quot;window.close();&quot; value=&quot;按我關閉視窗&quot;&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>在上述範例中，如果你先造訪了其他網頁再來到範例頁面，則會發現視窗無法關閉，這是基於安全性的考量，如果該視窗有瀏覽其他網頁的記錄(也就是你能按上一頁/下一頁的時候)，則可能會無法關閉視窗。</p>

<p>透過 opener，可以操作原來的視窗。我們先使用一個網頁做為母視窗，用來開啟子視窗：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;script&gt;function myOpen(){	window.open(&quot;js_window_opener_menu.htm&quot;, &quot;test&quot;);}&lt;/script&gt;&lt;input type=&quot;button&quot; onClick=&quot;myOpen();&quot; value=&quot;按我開新視窗&quot;&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>子視窗的內容如下，此例以 opener.location.href 控制母視窗所開啟的網址：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;script&gt;function mainCtrl(theUrl){	if(opener == null){		alert(&quot;母視窗已關閉或者不存在&quot;);	}	else {		opener.location.href = theUrl;	}}&lt;/script&gt;&lt;a href=&quot;javascript:mainCtrl('http://www.nthu.edu.tw')&quot;&gt;清大首頁&lt;/a&gt;&lt;br/&gt;&lt;a href=&quot;javascript:mainCtrl('http://www.nctu.edu.tw')&quot;&gt;交大首頁&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>上述範例中，也可以改為在偵測到母視窗關閉後，重新開啟一個視窗，並改為對新的視窗操作。另外，各位也可以試試看直接開啟子視窗的效果。</p>

<p>如果希望呈現的效果不是子母視窗的互相操控，而是把一個網頁畫面進行切割，以將其他網頁內嵌進來互相操控，那麼可以透過 iframe 標籤進行(古早時代是利用 frameset 和 frame 標籤，但 HTML5 已不支援這兩個標籤)。此時，如果你要從某個 iframe 操作其他的 iframe，則除了利用超連結的 target 屬性以外，還可以使用 JavaScript 來進行。下面這個範例，用兩個 iframe 各自嵌入不同的網頁，並且可利用嵌入在左邊的網頁，操控嵌入在右邊的網頁，如下：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;table width=&quot;100%&quot; height=&quot;100%&quot; border=&quot;1&quot;&gt;	&lt;tr&gt;		&lt;td width=&quot;20%&quot;&gt;			&lt;iframe name=&quot;menu&quot; src=&quot;js_window_frame_menu.htm&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;&lt;/iframe&gt;		&lt;/td&gt;		&lt;td width=&quot;80%&quot;&gt;			&lt;iframe name=&quot;right&quot; src=&quot;js_window_frame_right.htm&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;&lt;/iframe&gt;		&lt;/td&gt;	&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>其中，被嵌入為左邊的網頁如下：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;a href=&quot;http://www.nthu.edu.tw&quot; target=&quot;right&quot;&gt;清大首頁&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.nctu.edu.tw&quot; target=&quot;right&quot;&gt;交大首頁&lt;/a&gt;&lt;br&gt;&lt;input type=&quot;button&quot; value=&quot;原來那頁&quot; onclick=&quot;parent.right.location.href='js_window_frame_right.htm';&quot;&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>被嵌入為右邊的網頁則如下：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;script&gt;document.write(Math.random());&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>操作瀏覽紀錄也是在 windows 物件的業務範圍之內。你除了可透過 window.history.go 來前往上下幾頁以外，在 HTML5 中還加入了 pushState 等方法，可以用來加入和修改歷史記錄。如果搭配上物件樣式等方面的改變，則可以達成類似臉書點擊照片或者低卡點擊文章時的效果：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;	&lt;style&gt;		#slideShow {			position: absolute;			top: 0;			left: 0;			width: 100%;			height: 100%;			background: rgba(0, 0, 0, 0.5);			display: none;			z-index: 1;		}		#slideShowImg {			position: absolute;			top: 100px;			left: 350px;			z-index: 2;			display: none;		}	&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;script&gt;	function showSlide(path){		document.getElementById(&quot;slideShowImg&quot;).src = path;		document.getElementById(&quot;slideShow&quot;).style.display = &quot;block&quot;;		document.getElementById(&quot;slideShowImg&quot;).style.display = &quot;block&quot;;		window.history.pushState(			{				&quot;what_is_this&quot;: &quot;隨便放一些你自己認得出 state 的東西&quot;			},			&quot;這裡是標題，但是多數瀏覽器仍未支援&quot;,			path		);	}		function hideSlide(){		document.getElementById(&quot;slideShow&quot;).style.display = &quot;none&quot;;		document.getElementById(&quot;slideShowImg&quot;).style.display = &quot;none&quot;;		window.history.back();	}	window.onpopstate = function(){hideSlide();}&lt;/script&gt;&lt;img src=&quot;../pics/bg01.jpg&quot; width=&quot;300&quot; onClick=&quot;showSlide('../pics/bg01.jpg')&quot;&gt;&lt;div id=&quot;slideShow&quot; onClick=&quot;hideSlide()&quot;&gt;&lt;/div&gt;&lt;img id=&quot;slideShowImg&quot; src=&quot;&quot;&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>若要改變已開啟視窗的位置或大小，可以使用 moveTo, moveBy, resizeTo, 以及 resizeBy。但請留意，除了 IE 之外的瀏覽器，這些函式只能對 window.open 開啟的視窗操作，若有興趣可自行測試：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;script&gt;function winCtrl(funcName){	x = document.getElementById(&quot;X&quot;).value;	y = document.getElementById(&quot;Y&quot;).value;	eval(&quot;newWindow.&quot; + funcName + &quot;(&quot; + x + &quot;, &quot; + y + &quot;);&quot;);}&lt;/script&gt;&lt;form&gt;	&lt;input type=&quot;button&quot; value=&quot;先按我開新視窗&quot; onclick=&quot;newWindow = window.open('../index.htm','OAO','width=300,height=300');&quot;&gt;	X: &lt;input id=&quot;X&quot; type=&quot;number&quot; min=&quot;50&quot; max=&quot;1000&quot; value=&quot;50&quot;&gt;&lt;br/&gt;	Y: &lt;input id=&quot;Y&quot; type=&quot;number&quot; min=&quot;50&quot; max=&quot;1000&quot; value=&quot;50&quot;&gt;&lt;br/&gt;	&lt;input type=&quot;button&quot; value=&quot;moveTo&quot; onclick=&quot;winCtrl(this.value)&quot;&gt;	&lt;input type=&quot;button&quot; value=&quot;moveBy&quot; onclick=&quot;winCtrl(this.value)&quot;&gt;	&lt;input type=&quot;button&quot; value=&quot;resizeTo&quot; onclick=&quot;winCtrl(this.value)&quot;&gt;	&lt;input type=&quot;button&quot; value=&quot;resizeBy&quot; onclick=&quot;winCtrl(this.value)&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>若要控制視窗的捲動，可以使用 scroll, scrollTo, 以及 scrollBy：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;script&gt;function winCtrl(funcName){	x = document.getElementById(&quot;X&quot;).value;	y = document.getElementById(&quot;Y&quot;).value;	eval(&quot;window.&quot; + funcName + &quot;(&quot; + x + &quot;, &quot; + y + &quot;);&quot;);}&lt;/script&gt;&lt;form style=&quot;position:fixed;top:10px;left:10px;background:#cfc;padding:10px;&quot;&gt;	X: &lt;input id=&quot;X&quot; type=&quot;number&quot; min=&quot;0&quot; max=&quot;1000&quot; value=&quot;50&quot;&gt;&lt;br/&gt;	Y: &lt;input id=&quot;Y&quot; type=&quot;number&quot; min=&quot;0&quot; max=&quot;1000&quot; value=&quot;50&quot;&gt;&lt;br/&gt;	&lt;input type=&quot;button&quot; value=&quot;scroll&quot; onclick=&quot;winCtrl(this.value)&quot;&gt;	&lt;input type=&quot;button&quot; value=&quot;scrollTo&quot; onclick=&quot;winCtrl(this.value)&quot;&gt;	&lt;input type=&quot;button&quot; value=&quot;scrollBy&quot; onclick=&quot;winCtrl(this.value)&quot;&gt;&lt;/form&gt;&lt;div style=&quot;position:absolute;top:1500px;left:1500px;&quot;&gt;這是純粹把文件範圍撐大的 div&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>監聽 scroll 事件可以在捲軸捲動時做出你想要的處理，搭配上取得捲軸位置與物件高度的判斷，就可以做出無限捲動的效果：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;	&lt;style&gt;		table {			width: 90%;			border-collapse: collapse;		}		td {			border: 1px solid;			width: 15%;			padding-top: 100px;			padding-bottom: 100px;			text-align: center;		}	&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;center&gt;&lt;table id=&quot;numTable&quot;&gt;&lt;/table&gt;&lt;/center&gt;&lt;script&gt;var begin = 1;function getTr(){	cnt = '&lt;tr&gt;';	for(count=0; count&lt;5; count++, begin++){		cnt += '&lt;td&gt;' + begin + '&lt;/td&gt;';	}	cnt += '&lt;/tr&gt;';	return cnt;}function makeNewRows(){	document.getElementById('numTable').innerHTML += getTr();    document.getElementById('numTable').innerHTML += getTr();    document.getElementById('numTable').innerHTML += getTr();    document.getElementById('numTable').innerHTML += getTr();    document.getElementById('numTable').innerHTML += getTr();}window.onload = function(){    document.getElementById('numTable').innerHTML = '';    makeNewRows();}window.addEventListener('scroll', () =&gt; {	if(window.innerHeight + window.pageYOffset &gt; document.body.offsetHeight-5){		makeNewRows();	}});&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>圖片延遲載入(lazy loading)的概念也非常類似，是等到圖片進入視窗範圍後再將其載入，以避免網頁在一開始就花時間在載入要捲很久才能看見的資源。Lazy loading 除了可以用已經在 Chrome 等部分瀏覽器支援的原生功能，或者第三方套件實作出來以外，也可以用比較基本的監聽事件來完成。在這個應用中，除了像無限捲動一樣，每當滑到底時再依次新增內容以外，也可以在每次捲動時，用 getBoundingClientRect 判斷圖片是否已經允許載入(為求範例簡潔故只針對高度做判斷，若需判斷寬度請依此類推)：</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;center&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1605_01_魁力屋.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1605_02_橫綱.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1605_03_極雞.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_01_五行.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_02_若王子.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_03_天天有.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_04_arajin.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_05_boogie.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1607_01_珍遊.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1607_02_和釀.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1607_03_あくた川.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1607_04_山元.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1608_01_roppongi.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1608_02_池袋二郎.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1609_01_麵鬥庵.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1610_01_豬一.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1610_02_元喜神.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1612_01_若狹家.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1703_01_夕日.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1704_01_大文字.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1712_01_麵屋緣.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1802_01_小川.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1802_02_雞二.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1803_01_貓村.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1807_01_車廠.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1812_01_一燈.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1902_01_一慶.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1904_01_千雲.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1905_01_麵屋輝.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2007_01_京都柚子.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2007_02_中山.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2010_01_山下.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2011_01_你回來了.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2101_01_市民.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2102_01_隱家.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2103_01_柑橘.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2104_01_壹之穴.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2104_02_蘭丸.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2105_01_裸湯.JPG&quot;&gt;&lt;br&gt;&lt;/center&gt;&lt;script&gt;function processLazyImgs(){	lazyImgs = document.querySelectorAll('img.lazy');	for(i=0; i&lt;lazyImgs.length; i++){		var pos = lazyImgs[i].getBoundingClientRect();		if(pos.top &gt;= 0 &amp;&amp; pos.top &lt;= window.innerHeight - 100){			lazyImgs[i].src = lazyImgs[i].getAttribute('data-src');			lazyImgs[i].classList.remove(&quot;lazy&quot;);			lazyImgs[i].style.height = '500px';			lazyImgs[i].style.margin = '5px';		}	}}window.onload = processLazyImgswindow.addEventListener('scroll', processLazyImgs);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>我們也可以將上述範例，改成用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API">Intersection Observer API</a> 來監視物件是否已經進入視窗範圍，這樣的好處是節省瀏覽器內部運算效能，你也不用自己撰寫相關的判斷</p>
<pre class="brush: htmljs">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;center&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1605_01_魁力屋.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1605_02_橫綱.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1605_03_極雞.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_01_五行.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_02_若王子.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_03_天天有.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_04_arajin.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1606_05_boogie.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1607_01_珍遊.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1607_02_和釀.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1607_03_あくた川.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1607_04_山元.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1608_01_roppongi.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1608_02_池袋二郎.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1609_01_麵鬥庵.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1610_01_豬一.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1610_02_元喜神.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1612_01_若狹家.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1703_01_夕日.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1704_01_大文字.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1712_01_麵屋緣.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1802_01_小川.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1802_02_雞二.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1803_01_貓村.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1807_01_車廠.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1812_01_一燈.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1902_01_一慶.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1904_01_千雲.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/1905_01_麵屋輝.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2007_01_京都柚子.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2007_02_中山.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2010_01_山下.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2011_01_你回來了.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2101_01_市民.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2102_01_隱家.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2103_01_柑橘.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2104_01_壹之穴.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2104_02_蘭丸.JPG&quot;&gt;&lt;br&gt;&lt;img class=&quot;lazy&quot; src=&quot;../pics/gray.png&quot; data-src=&quot;../pics/ramen_and_cats/2105_01_裸湯.JPG&quot;&gt;&lt;br&gt;&lt;/center&gt;&lt;script&gt;watcher = new IntersectionObserver((objs, observer) =&gt; {	objs.forEach(obj =&gt; {		if(obj.isIntersecting){			img = obj.target;			img.src = img.getAttribute('data-src');			img.classList.remove(&quot;lazy&quot;);			img.style.height = '500px';			img.style.margin = '5px';			observer.unobserve(img);		}	})});document.querySelectorAll('img.lazy').forEach(img =&gt; {	watcher.observe(img);});&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
</blockquote>

</body></html>
