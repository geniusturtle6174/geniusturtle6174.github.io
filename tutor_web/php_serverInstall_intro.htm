<html>
<head>
	<title>線上教材：WEB 程式設計</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel=stylesheet type="text/css" href="myCss.css" />
	<base target="_blank">
</head>

<body bgcolor="#ccccff">
<blockquote>

<p>
之前介紹的 HTML、CSS、JavaScript 等內容，如果只是在自己電腦上觀看，那麼只需要滑鼠在網頁檔案上點兩下，瀏覽器就會自動打開檔案並呈現出來。而你能將網頁傳送到 GitHub 等網頁空間，透過在瀏覽器輸入網址觀看，則是因為在 GitHub 的主機上裝有一種特別的軟體，叫做「伺服器」（有時候，「伺服器」這個詞，也同時會用來指稱那台主機本身），可以從接收瀏覽器傳送過來的網址，找到主機裡面的網頁，然後傳送到你的電腦前面。然而，GitHub 主機上提供給各位當作網頁空間的伺服器軟體，只允許將內容原封不動的傳送到你的電腦裡，然後讓瀏覽器來執行你所撰寫的 HTML、CSS，或 JavaScript 等等內容；如果你希望儲存一些資料，例如大家的留言等等，以讓不同使用者之間進行互動，則需要撰寫一些不同種類的程式（以本教材為例，是 PHP 語言），讓伺服器先在主機上，就透過執行你的程式來存取資料後，再送到大家的電腦上；此時，就需要另外尋找提供相關服務的儲存空間或虛擬主機，或者自行架設環境來接受外部連線。
</p>

<p>
提供相關服務的主機，根據所選擇的程式語言，可以有不同的眾多選擇，各位若只是小規模使用，沒有什麼預算，可以自行以「免空」（免費空間的簡稱）等關鍵字上網搜尋，於此篇不再贅述。而若要自己架設環境，則除了用來接受連線與送出頁面的網頁伺服器以外，通常還要一併安裝了用來在主機端執行運算的程式語言環境、儲存資料的資料庫，以及用來管理資料庫的介面。如果要使用的伺服器端語言是 PHP，則在以上這四項的搭配中，最常見的組合是 Apache + PHP + MySQL (or MariaDB) + phpMyAdmin。以下將分別提及個別安裝以及整包安裝的方法。
</p>

</blockquote>
</body></html>
