<html>
<head>
	<title>線上教材：WEB 程式設計</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel=stylesheet type="text/css" href="myCss.css" />
	<base target="_blank">
	<script type="text/javascript" src="myJs.js"></script>
	<script type="text/javascript" src="shCore.js"></script>
	<script type="text/javascript" src="shBrushXml.js"></script>
	<script type="text/javascript" src="shBrushMine.js"></script>
	<link href="shCore.css" rel="stylesheet" type="text/css" />
	<link href="shThemeDefault.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript">
		SyntaxHighlighter.all();
	</script>
	</head>

<body bgcolor="#ccccff">

<blockquote>

<script>
showWarning('本篇內容假設你使用過任一其他程式語言的陣列。');
</script>

<p>PHP 的陣列跟 JavaScript 和 Python 一樣，可以放入不同類型的資料，也可以動態新增：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?php$test = array(12, 3.45, &quot;6789&quot;);$test[3] = 'abc';$test[4] = 'def';$test[5] = 3.1415926;echo $test[0].&quot; &quot;.gettype($test[0]).&quot;&lt;br&gt;&quot;;echo $test[1].&quot; &quot;.gettype($test[1]).&quot;&lt;br&gt;&quot;;echo $test[2].&quot; &quot;.gettype($test[2]).&quot;&lt;br&gt;&quot;;echo $test[3].&quot; &quot;.gettype($test[3]).&quot;&lt;br&gt;&quot;;echo $test[4].&quot; &quot;.gettype($test[4]).&quot;&lt;br&gt;&quot;;echo $test[5].&quot; &quot;.gettype($test[5]).&quot;&lt;br&gt;&quot;;?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>如上一個範例所述，PHP 中陣列的索引值是從 0 開始，因此在使用迴圈處理以及動態新增資料時，要留意迴圈跳動的變數範圍：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?php$test = array(12, 3.45, &quot;6789&quot;);?&gt;原有的元素：&lt;br&gt;&lt;?phpfor( $i = 0 ; $i &lt; count($test) ; $i++ ){	echo $i.&quot;-th element of \$test: &quot;.$test[$i].&quot;&lt;br&gt;&quot;;}?&gt;&lt;br&gt;動態新增一些元素，最後再印出：&lt;br&gt;&lt;?phpfor( $i = count($test) ; $i &lt; 10 ; $i++ ){	$test[$i] = $i * 5;}var_dump($test);?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>PHP 也跟 Python 相似，可以使用 key/value 的形式來存取資料；此時，就可以搭配上 foreach 迴圈來存取：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;手動建立與新增：&lt;br&gt;&lt;?php$abc = array(123 =&gt; 456, &quot;abc&quot; =&gt; &quot;def&quot;);$abc['OAO'] = &quot;QQ&quot;;echo $abc[123].&quot; &quot;.gettype($abc[123]).&quot;&lt;br&gt;&quot;;echo $abc['abc'].&quot; &quot;.gettype($abc[&quot;abc&quot;]).&quot;&lt;br&gt;&quot;;echo $abc[&quot;OAO&quot;].&quot; &quot;.gettype($abc['OAO']).&quot;&lt;br&gt;&quot;;?&gt;&lt;br&gt;只看 value 的 foreach 使用：&lt;br&gt;&lt;?phpforeach( $abc as $val ){	echo &quot;Element of \$abc: &quot;.$val.&quot;&lt;br&gt;&quot;;}?&gt;&lt;br&gt;Key 和 value 一起看的 foreach 使用：&lt;br&gt;&lt;?phpforeach( $abc as $key =&gt; $val ){	echo &quot;Element of \$abc[&quot;.$key.&quot;]: &quot;.$val.&quot;&lt;br&gt;&quot;;}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>陣列裡面除了數字和字串以外，還可以放進另外一個陣列。以包了兩層的狀況來說，我們會稱呼其為「二維陣列」，你需要為每一層的陣列類型（是否為 key/value 形式）搭配適當的處理方法：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?php// 手動建立$abc = array(	123,	&quot;456&quot;,	array(789, 10),	array('0' =&gt; 48, 'A' =&gt; 65, 'a' =&gt; 97));// 使用迴圈印出for( $i = 0; $i &lt; count($abc); $i++ ){	echo $i.': ';	var_dump($abc[$i]);	echo '&lt;br&gt;';}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
</blockquote>

</body></html>
