<html>
<head>
	<title>線上教材：WEB 程式設計</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel=stylesheet type="text/css" href="myCss.css" />
	<base target="_blank">
	<script type="text/javascript" src="myJs.js"></script>
	<script type="text/javascript" src="shCore.js"></script>
	<script type="text/javascript" src="shBrushXml.js"></script>
	<script type="text/javascript" src="shBrushMine.js"></script>
	<link href="shCore.css" rel="stylesheet" type="text/css" />
	<link href="shThemeDefault.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript">
		SyntaxHighlighter.all();
	</script>
	</head>

<body bgcolor="#ccccff">

<blockquote>

<script>showWarning("本教材的互動部分是以 HTML 和 PHP 撰寫在同一檔案的方式進行，若希望將前後端分開撰寫，可參考 AJAX 或各種框架");</script>

<p>要讓前端的表單能跟後端的 PHP 互動，我們要透過 form 標籤的 action 屬性，來指定表單要送出到哪支 PHP 檔案來處理；同樣是 form 標籤的 method 屬性，則是用來指定送出的方法；而 input 等輸入框相關標籤的 name 屬性，則是讓 PHP 認得該輸入框並且取得其值。其中，method 的部份分為 get 和 post 兩種，說明如下：</p>
<ul>
	<li>get: 會附帶在網址連結當中送出，例如 http://example.com/test.php?abc=123，其中的「abc=123」就是送出的資料。用此方法送出時，資料長度較為受限。</li>
	<li>post: 嵌在封包內部送出，可允許較大量的資料。</li>
</ul>

<p>以下是利用 get 方法送出資料的範例，此範例會接受兩個整數並相加。其中需要留意，雖然 HTML 不分大小寫，但是 PHP 跟 JavaScript 都一樣會區分，因此 name 屬性的值請注意大小寫。</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?phpif( isset($_GET['a']) &amp;&amp; isset($_GET['b']) ){	echo (int)$_GET['a'] + (int)$_GET['b'];}?&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;get&quot;&gt;	&lt;input type=&quot;text&quot; name=&quot;a&quot;&gt; +	&lt;input type=&quot;text&quot; name=&quot;b&quot;&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>在上述範例中：</p>
<ul>
	<li>「isset」可以檢查變數是否存在，以使得在網頁沒有資料輸入（例如初次被存取）時，不需要執行相關運算。不過「isset」只會在變數未宣告、未定義或者值為 null 時回傳 false，如果需要判斷是否為空字串，必須使用「== ""」或者「empty」來進行。</li>
	<li>「$_SERVER['PHP_SELF']」會取得頁面在伺服器上的路徑，相當於 http://example.com/a/b/c.php 當中的 /a/b/c.php；而 basename 相當於取得主檔名，即前述的 c.php；因此，兩者綜合起來並設定為表單 action 時，相當於將表單資料送到目前的檔案來處理。</li>
	<li>雖然在運算加法時，只要使用者輸入的是數字，PHP 也會幫我們自動轉型；但是明確的做轉型，可以避免掉萬一輸入不是數字的時候，可能會產生的一些問題。</li>
</ul>

<p>若要改用 post 送出資料，則只需把表單送出和 php 接收的部份，都改成 post 所需的用法：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?phpif( isset($_POST['a']) &amp;&amp; isset($_POST['b']) ){	echo (int)$_POST['a'] + (int)$_POST['b'];}?&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;post&quot;&gt;	&lt;input type=&quot;text&quot; name=&quot;a&quot;&gt; +	&lt;input type=&quot;text&quot; name=&quot;b&quot;&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>如果有多個送出按鈕，需要知道是哪個被按下，當然也可以幫按鈕加上 name 屬性來辨認。以下範例有十個按鈕，PHP 會判斷是誰被按下：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;style&gt;body, select{font-size:30px}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;post&quot;&gt;	&lt;?php		for( $i = 1 ; $i &lt;= 10 ; $i++ ){			echo &quot;&lt;input type=\&quot;submit\&quot; name=\&quot;$i\&quot; value=\&quot;第 $i 號按鈕\&quot;&gt;&quot;;		}	?&gt;&lt;/form&gt;&lt;?phpfor( $i = 1 ; $i &lt;= 10 ; $i++ ){	echo &quot;按鈕 $i 是否被按下: &quot; . (isset($_POST[$i]) ? &quot;是&quot; : &quot;否&quot; ) . &quot;&lt;br&gt;&quot;;}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>若要與選單互動，則需在名稱後面加上「[]」，以代表形成陣列（各位可以自行測試看看不加「[]」的效果）。以下範例是將多選選單選到的數字相加，此範例中，由於沒有在 option 標籤中加入 value 屬性，所以 PHP 會取得 option 標籤夾住的內容；如果你為 option 標籤加上了 value 屬性，則 PHP 就會拿到 value 屬性的值：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;style&gt;body, select{font-size:50px}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?phpif( isset($_POST['number']) &amp;&amp; gettype($_POST['number']) == 'array' ){	$sum = 0;	foreach( $_POST['number'] as $i ){		$sum += (int)$i;	}	echo $sum;}?&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;post&quot;&gt;	&lt;select name=&quot;number[]&quot; multiple&gt;		&lt;?php			for( $i = 1 ; $i &lt;= 10 ; $i++ ){				echo &quot;&lt;option&gt;&quot;.$i.&quot;&lt;/option&gt;&quot;;			}		?&gt;	&lt;/select&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>而與多選方塊互動，也需要加上「[]」。此範例一樣是將選到的數字相加，只是介面不太一樣：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;style&gt;body, select{font-size:50px}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?phpif(isset($_POST['number']) &amp;&amp; gettype($_POST['number']) == 'array'){	$sum = 0;	foreach($_POST['number'] as $i){		$sum += (int)$i;	}	echo $sum;}?&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;post&quot;&gt;	&lt;?php		for($i=1;$i&lt;=10;$i++){			echo &quot;&lt;input type=\&quot;checkbox\&quot; name=\&quot;number[]\&quot; id=\&quot;$i\&quot; value=\&quot;$i\&quot;&gt;&quot;;			echo &quot;&lt;label for=\&quot;$i\&quot;&gt;$i&lt;/label&gt;&amp;nbsp;&quot;;		}	?&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>選單的一個常用的使用方式，就是選擇查看那些資料。以下範例為查看修課同學的資料，並假設 0~4 的課程中，你只有修其中 1~3 的那三門課（實際上的系統，會從資料庫中撈取資料出來顯示，但此處尚未介紹到相關方式，因此寫死在程式碼中）：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;style&gt;body, select{font-size:50px}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?php$classmates = array(	'0' =&gt; array('Alien', 'Bob'),	'1' =&gt; array('Cindy', 'David'),	'2' =&gt; array('Ellen', 'Fox'),	'3' =&gt; array('Grace', 'Henry'),	'4' =&gt; array('Izero', 'Jack'),);if( isset($_POST['course']) &amp;&amp; gettype($_POST['course']) == 'array' ){	echo (int)$_POST['course'][0] . ': ' . join(', ', $classmates[$_POST['course'][0]]);}?&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;post&quot;&gt;	請選擇課程：	&lt;select name=&quot;course[]&quot;&gt;		&lt;option value=&quot;1&quot;&gt;流行音樂與數位創意運用&lt;/option&gt;		&lt;option value=&quot;2&quot;&gt;資料庫應用&lt;/option&gt;		&lt;option value=&quot;3&quot;&gt;WEB 程式設計&lt;/option&gt;	&lt;/select&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>不過在上述的範例中，如果你會以透過開發者工具等方式來修改或送出假資料的話，是可以在選單未列出的情況下，看到另外兩門課的修課同學資料的。因此，比較完整的做法，必須是加上適當的檢查，如下：</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;style&gt;body, select{font-size:50px}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?php$classmates = array(	'0' =&gt; array('Alien', 'Bob'),	'1' =&gt; array('Cindy', 'David'),	'2' =&gt; array('Ellen', 'Fox'),	'3' =&gt; array('Grace', 'Henry'),	'4' =&gt; array('Izero', 'Jack'),);$courseTaken = array(	'1' =&gt; '流行音樂與數位創意運用',	'2' =&gt; '資料庫應用',	'3' =&gt; 'WEB 程式設計');if( isset($_POST['course']) &amp;&amp; gettype($_POST['course']) == 'array' ){	if(array_key_exists($_POST['course'][0], $courseTaken)){		echo (int)$_POST['course'][0] . ': ' . join(', ', $classmates[$_POST['course'][0]]);	}	else {		echo '錯誤：你沒有修讀此門課程';	}}?&gt;&lt;form action=&quot;&lt;?php echo basename($_SERVER['PHP_SELF']);?&gt;&quot; method=&quot;post&quot;&gt;	請選擇課程：	&lt;select name=&quot;course[]&quot;&gt;		&lt;?php			foreach( $courseTaken as $key =&gt; $val ){				echo '&lt;option value=&quot;' . $key . '&quot;&gt;' . $val . '&lt;/option&gt;';			}		?&gt;	&lt;/select&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>既然可以修改表單，那麼憑空創造一個表單也不是什麼大問題。在以下的範例中，雖然沒有表單（為了展示方便，故隱藏在註解之中），但我們仍然可以自己創造一個來送出資料。此範例的防禦狀況，通常會應用於只有特殊權限才可以送出資料，因此請參考 session 的篇章來進行防禦。</p>
<pre class="brush: htmljsphp">﻿&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;?phpif( isset($_POST['a']) &amp;&amp; isset($_POST['b']) ){	echo (int)$_POST['a'] + (int)$_POST['b'];}?&gt;&lt;!--form action=&quot;???.php&quot; method=&quot;post&quot;&gt;	&lt;input type=&quot;text&quot; name=&quot;a&quot;&gt; +	&lt;input type=&quot;text&quot; name=&quot;b&quot;&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form--&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
</blockquote>

</body></html>
