<html>
<head>
	<title>線上教材：WEB 程式設計</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link rel=stylesheet type="text/css" href="myCss.css" />
	<base target="_blank">
	<script type="text/javascript" src="myJs.js"></script>
	<script type="text/javascript" src="shCore.js"></script>
	<script type="text/javascript" src="shBrushMine.js"></script>
	<link href="shCore.css" rel="stylesheet" type="text/css" />
	<link href="shThemeDefault.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript">
		SyntaxHighlighter.all();
	</script>
	﻿</head>

<body bgcolor="#ccccff">

<blockquote>

<p>
HTML 5 新增的「video」和「audio」標籤，
使瀏覽器可以用原生的能力撥放影音訊號，不需要再透過外掛程式，
也不再需要透過各種不同的標籤，指定一大堆奇怪的參數。
以下的範例，影片來源為
<a href="http://www.youtube.com/watch?v=bGhSYvQ08R0">http://www.youtube.com/watch?v=bGhSYvQ08R0</a>，
聲音來源為 <a href="pics/drift.mp3">2009 資工營營歌 - 漂流</a>
以及<a href="pics/nthu_loveSong.mp3">清華情歌</a>。
</p>

<p>
簡單的範例如下如下：
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;video src=&quot;../pics/banana.mp4&quot;&gt;&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;</pre>
如果打開這個範例，各位應該會發現只有一片黑。
這是因為影片在預設情況下，會停留在第一個 frame，
而此範例影片的第一個 frame 剛好是一片黑。
</p>

<p>
我們可以加上其他的一些屬性，來進行播放的控制：
<ul>
	<li>autoplay: 自動撥放</li>
	<li>loop: 重複播放</li>
	<li>controls: 加上控制面板</li>
</ul>
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;video src=&quot;../pics/banana.mp4&quot; autoplay loop controls&gt;&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;</pre>
</p>

<p>
由於影片的第一個 frame 通常沒有什麼意義，所以可以透過「poster」屬性，來為影片貼上封面：
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;video src=&quot;../pics/banana.mp4&quot; controls poster=&quot;../pics/Life-of-Pi.jpg&quot;&gt;&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;</pre>
</p>

<p>
我們也可以像「img」標籤一樣，透過「width」和「height」屬性來調整寬度和高度。
如果只設定其一，則會維持比例；如果兩者都設定且不成比例，則播放時仍會維持比例：
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;video src=&quot;../pics/banana.mp4&quot; controls	   width=&quot;1234&quot; height=&quot;567&quot; style=&quot;border:1px solid&quot;&gt;&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;</pre>
</p>

<p>
「preload」屬性可以指定影音檔是否要在播放前預先下載，這個屬性有以下三種值：
<ul>
	<li>auto: 由瀏覽器決定是否先下載</li>
	<li>metadata: </li>
	<li>none: </li>
</ul><br/>
另外，「muted」屬性可以設定是否靜音。
範例如下：
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;video src=&quot;../pics/banana.mp4&quot; controls muted preload=&quot;auto&quot;&gt;&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;</pre>
</p>

<p>
「audio」標籤和「video」的屬性大致相同，不過沒有「width」、「height」和「poster」屬性：
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;audio src=&quot;../pics/drift.mp3&quot; controls&gt;&lt;/audio&gt;&lt;/body&gt;&lt;/html&gt;</pre>
</p>

<p>
由於影音格式眾多，仍然不見得每種瀏覽器都支援各式格式，
所以可透過「source」，來提供多種不同格式的影片：
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;video controls&gt;	&lt;source src=&quot;../pics/banana.webm&quot; type=&quot;video/webm&quot;&gt;	&lt;source src=&quot;../pics/banana.mp4&quot; type=&quot;video/mp4&quot;&gt;	&lt;p&gt;你的瀏覽器不支援 video 標籤&lt;/p&gt;	&lt;p&gt;下載 &lt;a href=&quot;../pics/banana.webm&quot;&gt;webm 格式&lt;/a&gt; /			&lt;a href=&quot;../pics/banana.mp4&quot;&gt;mp4 格式&lt;/a&gt;的影片檔&lt;/p&gt;&lt;/video&gt;&lt;/body&gt;&lt;/html&gt;</pre>
</p>

<p>
「audio」和「video」標籤還有許多屬性和方法，可以讓我們透過 JavaScript 作更靈活的控制。
簡單列出如下：
<ul>
	<li>initialTime: 開始的播放秒數</li>
	<li>currentTime: 目前的播放秒數</li>
	<li>duration: 資料長度(秒)(唯讀屬性)</li>
	<li>paused: 是否暫停中(唯讀屬性)</li>
	<li>playBackRate: 播放速度</li>
	<li>volume: 音量，0 為靜音，1 為最大</li>
	<li>play(): 開始播放</li>
	<li>pause(): 暫停播放</li>
</ul><br/>
我們可以利用這些屬性和方法，進行一些簡單的控制：
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;	&lt;style&gt;		pre{font-size: 17px;}		a:hover{background: #ff9}	&lt;/style&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;audio id=&quot;drift&quot; src=&quot;../pics/drift.mp3&quot; controls&gt;&lt;/audio&gt;&lt;br/&gt;&lt;input type=&quot;button&quot; value=&quot;||&quot; onCLick=&quot;pause();&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;&gt;&quot; onCLick=&quot;play();&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;&gt;&gt;&quot; onCLick=&quot;fastPlay();&quot;&gt;&lt;pre&gt;&lt;a onCLick=&quot;playBetween(  1.0,  7.8)&quot;&gt;片刻清醒片刻瘋狂　我醒在黑夜的海上&lt;/a&gt;&lt;a onCLick=&quot;playBetween(  7.8, 15.0)&quot;&gt;乘著孤寂四處飄蕩　故鄉在遙遠的方向&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 15.0, 24.0)&quot;&gt;緩緩登上一座荒島　這將是地獄或天堂&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 24.0, 31.0)&quot;&gt;翠綠棕梠輕輕搖晃　帶給我生存的力量&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 31.0, 44.2)&quot;&gt;忽然　看見　前方　有光　是誰　在唱&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 44.2, 56.0)&quot;&gt;來吧　朋友　不要　沮喪　讓熱情驅逐哀傷&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 56.0, 62.9)&quot;&gt;人生的海浪多無常　總是打擊人希望&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 62.9, 69.4)&quot;&gt;前進的腳步雖踉蹌　揮揮手逝去淚光&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 69.4, 75.9)&quot;&gt;多麼慶幸這一路上　有你陪在我身旁&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 75.9, 85.1)&quot;&gt;　　　　總有一天　我們遠渡重洋&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 85.1, 93.0)&quot;&gt;緩緩登上一座荒島　這將是地獄或天堂&lt;/a&gt;&lt;a onCLick=&quot;playBetween( 93.0,100.0)&quot;&gt;翠綠棕梠輕輕搖晃　帶給我生存的力量&lt;/a&gt;&lt;a onCLick=&quot;playBetween(100.0,112.3)&quot;&gt;忽然　看見　前方　有光　是誰　在唱&lt;/a&gt;&lt;a onCLick=&quot;playBetween(112.3,125.0)&quot;&gt;來吧　朋友　不要　沮喪　讓熱情驅逐哀傷&lt;/a&gt;&lt;a onCLick=&quot;playBetween(125.0,131.5)&quot;&gt;人生的海浪多無常　總是打擊人希望&lt;/a&gt;&lt;a onCLick=&quot;playBetween(131.5,137.7)&quot;&gt;前進的腳步雖踉蹌　揮揮手逝去淚光&lt;/a&gt;&lt;a onCLick=&quot;playBetween(137.7,144.3)&quot;&gt;多麼慶幸這一路上　有你陪在我身旁&lt;/a&gt;&lt;a onCLick=&quot;playBetween(144.3,150.7)&quot;&gt;　　　　總有一天　我們遠渡重洋&lt;/a&gt;&lt;a onCLick=&quot;playBetween(150.7,157.4)&quot;&gt;　　　　再次回到　熟悉的故鄉&lt;/a&gt;&lt;/pre&gt;&lt;script&gt;d = document.getElementById(&quot;drift&quot;);timer = null;function pause(){	d.pause();}function play(){	clearTimeout(timer); // 免除 playBetween 設下的暫停影響	d.playbackRate = 1.0;	d.play();}function fastPlay(){	clearTimeout(timer); // 免除 playBetween 設下的暫停影響	d.playbackRate += 1.0;	d.play();}function playBetween(startTime, endTime){	clearTimeout(timer); // 免除前一次 playBetween 設下的暫停影響	d.playbackRate = 1.0;	d.currentTime = startTime;	d.play();	timer = setTimeout(&quot;pause()&quot;, (endTime-startTime)*1000); // 預約暫停}&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</pre>
上述範例中，由於 Chrome 不支援 playbackRate 為負數的情況，故未展示此功能，
有興趣者可自行測試(可能需要轉檔成其他格式)。
</p>

<p>
以下示範一個簡單的播放器，網頁載入時，
可以在兩首歌曲中，用滑鼠點兩下來選一首開始撥放，之後會一直在兩首之間輪流：
<pre class="brush: htmljs">﻿&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body bgcolor=&quot;#ccccff&quot;&gt;&lt;audio id=&quot;myPlayer&quot; src=&quot;&quot; controls&gt;&lt;/audio&gt;&lt;form&gt;	&lt;select id=&quot;songList&quot; size=&quot;2&quot; ondblclick=&quot;playSong()&quot;&gt;		&lt;option&gt;drift.mp3&lt;/option&gt;		&lt;option&gt;nthu_loveSong.mp3&lt;/option&gt;	&lt;/select&gt;&lt;/form&gt;&lt;script&gt;	myPlayer = document.getElementById(&quot;myPlayer&quot;);	songList = document.getElementById(&quot;songList&quot;);	songNames = songList.options;		myPlayer.addEventListener('ended', function() {		songNames.selectedIndex = (songNames.selectedIndex + 1) % songNames.length;		this.src = &quot;../pics/&quot; + songNames[songNames.selectedIndex].text; // 修改路徑		this.play();	});		function playSong(){		if(songNames.selectedIndex&gt;=0){ // 防止空白處被點選時產生之錯誤			myPlayer.src = &quot;../pics/&quot; + songNames[songNames.selectedIndex].text; // 修改路徑			myPlayer.play(); // 播放		}	}&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</pre>
其中，我們使用「addEventListener」來捕捉播放結束的事件(「ended」)，
「addEventListener」的兩個參數分別是事件名稱，以及事件發生時要執行的函式。
</ol>
</p>

</blockquote>

</body>
</html>
